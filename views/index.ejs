


<h1>Uploader demo</h1>
<p>Welcome to Uploader</p>

<!-- Initial code: Pure HTML / No JS -->
<div id="content">
	<figure id="thumbnail" class="empty" data-plugin-options='{"fileId":"12345"}'></figure> 
	<form id="upload-form" action="" method="post" enctype="multipart/form-data">
		
		<label for="upload">Go Upload Something</label><br>

		<input type="hidden" name="fileId" value="12345">
		<input type="file" name="upload" id="upload" accept="image/*">
		<input type="submit" value="Upload">
	</form>

	<div id="messages" style="display:none;"></div>

	<form id="remove-form" action="/remove" method="post" style="display:none;">
		<input type="hidden" name="file" value="12345">
		<label for="remove">Don't like it?</label><br/>
		<input type="submit" id="remove" value="Remove File">
	</form>
</div>

<!-- Grab Google CDN's jQuery. fall back to local if necessary -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js"></script>
<script>!window.jQuery && document.write(unescape('%3Cscript src="js/libs/jquery-1.7.1.min.js"%3E%3C/script%3E'))</script>
<script src="/js/libs/jquery.observer.js"></script>
<script src="/js/upload.js"></script>
<script src="/js/thumbnail.js"></script>
<script src="/js/remover.js"></script>

<script>
$(function(){

	var options, uploader, remover, thumbnail, messages;

	options = {
		observer: $.observer
	};

	// Observe event and define behaviour
	$.observer.subscribe('submit.uploader', 	onUploadStart );
	$.observer.subscribe('uploaded.uploader',	onUploadDone );
	$.observer.subscribe('removing.remover', 	onDeleteStart );
	$.observer.subscribe('removed.remover',		onDeleteDone );


	// Initialize modules
	uploader 	= $('#upload-form').uploader(options);
	remover		= $('#remove-form').remover(options);
	thumbnail 	= $('#thumbnail').thumbnail(options);

	// Handle Drag'n'drop 
	if (supportDragAndDrop()) {

		$('#content')
			.on('dragenter',	onDragEnter)
			.on('dragleave',	onDragLeave)
			.on('drop',			onDropFile)
			.on('dragover',		onDragOver);
	}

	function onUploadStart() {
		showMessage('Upload in Progress...');
		uploader.hide();
	}

	function onUploadDone() {
		hideMessage();
		remover.show();
	}

	function onDeleteStart() {
		remover.hide();
		showMessage('Removing file...');
	}

	function onDeleteDone() {
		hideMessage();
		uploader.show();
	}

	function showMessage(msg) {
		if (!messages) messages = $('#messages');
		messages.text(msg).show();
	}

	function hideMessage(){
		if (!messages) messages = $('#messages');
		messages.text('').hide();
	}

	// Test from Modernizr: 
	// https://github.com/Modernizr/Modernizr/blob/master/modernizr.js#L528-531
	function supportDragAndDrop() {

        var div = document.createElement('div');
        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);    
	}

	// prevent default behaviour
	function onDragEnter (e){ 

		showMessage('Drop here');
		uploader.hide();
		return false;
	}
	function onDragLeave (e){ 
		hideMessage();
		uploader.show();
		return false;
	}
	function onDragOver (e){ 

		showMessage('Drop here');
		uploader.hide();
		return false; 
	}

	function onDropFile(e) {

		e.preventDefault();
		e.stopPropagation();

		$.observer.publish('drop', e);
		return false;
	}
});
</script>